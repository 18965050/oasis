<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd


		  http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
       default-lazy-init="true">

  <description>Spring公共配置</description>

  <dubbo:application name="soa-test1"/>
  <dubbo:registry address="redis://192.168.17.77:6379"/>
  <dubbo:protocol name="dubbo" port="20880"/>

  <context:property-placeholder ignore-resource-not-found="true"
                                location="classpath*:/properties/application.properties,
                  classpath*:/properties/application.${spring.profiles.active}.properties,
                  classpath*:/properties/auth.properties"/>

  <!-- 使用dubbo annotation 自动注册bean,和dubbo Provider 并检查@Required,@Autowired的属性已被注入 -->
  <context:component-scan base-package="cn.xyz.chaos.examples.soa.p"/>

  <!-- 定义aspectj -->
  <aop:aspectj-autoproxy proxy-target-class="true"/>

  <import resource="provider/test1.xml"/>

</beans>