<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

  <!--||— MyBatis和spring集成的配置 STATRT —||-->

  <!-- sqlSession配置 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
    <property name="typeAliasesPackage" value="cn.xyz.chaos.examples.showcase.entity"/>
    <!-- 指定MyBatis配置文件 -->
    <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>
    <property name="mapperLocations" value="classpath:/mybatis/xml/**/*.xml"/>
  </bean>
  <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="cn.xyz.chaos.examples.showcase.repository"/>
    <property name="annotationClass" value="cn.xyz.chaos.orm.mybatis.MyBatisRepository"/>
  </bean>

  <!--||__ MyBatis和spring集成的配置 END __||-->


  <!-- 事务管理器配置 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <!-- 使用annotation定义事务 -->
  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

  <!-- production环境 -->
  <beans profile="production">
    <!-- 数据源配置,使用应用内的Tomcat JDBC连接池 -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
      <!-- Connection Info -->
      <property name="driverClassName" value="${jdbc.driver}"/>
      <property name="url" value="${jdbc.url}"/>
      <property name="username" value="${jdbc.username}"/>
      <property name="password" value="${jdbc.password}"/>
      <property name="maxActive" value="${jdbc.pool.maxActive}"/>
      <property name="maxIdle" value="${jdbc.pool.maxIdle}"/>
      <property name="defaultAutoCommit" value="false"/>
      <!-- 连接Idle半个小时后超时，每15分钟检查一次 -->
      <property name="timeBetweenEvictionRunsMillis" value="900000"/>
      <property name="minEvictableIdleTimeMillis" value="1800000"/>
    </bean>

  </beans>

  <!-- local development环境 -->
  <beans profile="development,pressure">
    <!-- Tomcat JDBC连接池 -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
      <property name="driverClassName" value="${jdbc.driver}"/>
      <property name="url" value="${jdbc.url}"/>
      <property name="username" value="${jdbc.username}"/>
      <property name="password" value="${jdbc.password}"/>
      <property name="defaultAutoCommit" value="false"/>
    </bean>

    <jdbc:initialize-database data-source="dataSource" ignore-failures="NONE" enabled="${initDatabase}">
      <jdbc:script location="classpath:sql/h2/01_Acc_All.sql"/>
    </jdbc:initialize-database>
  </beans>

  <!-- unit test环境 -->
  <beans profile="test">
    <!-- Spring Simple连接池 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
      <property name="driverClass" value="${jdbc.driver}"/>
      <property name="url" value="${jdbc.url}"/>
      <property name="username" value="${jdbc.username}"/>
      <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 初始化数据结构与默认数据 -->
    <!-- <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
      <jdbc:script location="classpath:sql/h2/schema.sql" />
      <jdbc:script location="classpath:data/h2/import-data.sql" encoding="UTF-8" />
    </jdbc:initialize-database> -->

  </beans>

</beans>
